#summary How to selectively markup a template page so that the WSO tags are only present on some pages.

= Introduction =

This page describes a technique by which the WSO control and tracking script can be conditionally loaded into a page.  This is useful in situations where there are multiple pages built from a single template - but where there is a requirement that only certain pages participate in the experiment.  This design uses JSP code to insert the tracking script code om the serverside, there is an [http://code.google.com/p/wso-hacks/wiki/MarkupTemplateUsingJavaScript alternative technique] which uses JavaScript technology to insert the tracking code at page load time.

= The Code =

The code supporting this design is here.  The two main files are:

  * template-wso-rules.txt
  * TemplateWso.java

===template-wso-rules.txt===

This file contains a JSON object which defines the experiments.  You should edit this file as appropriate.  Here is an example:

{{{
/*
  JSON object, with a single "rules" member - this is an array which defines the live WSO experiments.  Required fields are:
  
  	key: Typically a product id, determines whether the WSO control and tracking scripts will be written into the page under test.
  	     N.B. There can only be one experiment per page, so key should be unique in the rule set.
  	experiment: The experiment number as defined by the WSO front end during experiment setup.
  	type: Either "MV" or "AB" to indicate Multi-Variate and A/B tests.
  	goal: The name of the goal associated with this experiment.  This is used to determine which goal scripts to load into the goal
  	      page. 
*/
var wso_data = {"rules": [{"key":"Product1", "experiment":"1688662148", "type":"MV", "uacct":"UA-4918456-3", "goal":"order_confirm"},
	                      {"key":"Product2", "experiment":"0391758919", "type":"MV", "uacct":"UA-4918456-3", "goal":"order_confirm"},
	                      {"key":"Product3", "experiment":"0987654321", "type":"AB", "uacct":"UA-4918456-3", "goal":"email_confirm"}]
			   };
}}}

===template-wso.java===

This file contains various Java functions which will insert the WSO code into the DOM appropriately given the rules defined in the template-wso-rules.js file.  The important functions are:

{{{

}}}

= Example =

There are two example HTML pages showing the required markup:

  * template.html
  * template-goal.html

===template.html===

This file is an example of how the scripts described above can be used to selectively markup a page.  The following is an extract showing the important markup required:

{{{

}}}

===template-goal.html===

This file is an example of how the scripts described above can be used to selectively markup the goal page.  The following is an extract showing the important markup required:

{{{


}}}

Try these links to see the design at work:

  * [http://67.207.129.202/simonjsmith/wso/template/template.html?product=Product1 Product page, for a product for which there is an experiment defined.]
  * [http://67.207.129.202/simonjsmith/wso/template/template.html?product=Product15 Product page, for a product where there is no corresponding experiment.]
  * [http://67.207.129.202/simonjsmith/wso/template/template.html?product=Product1#utmxid=EAAAANQyrCw7jaZQCCgjvxgqzKU;utmxpreview=2-0-0-0 Using testing codes to Force a MV variation.]
    * Testing technique described [http://www.google.com/support/websiteoptimizer/bin/answer.py?hl=en&answer=63841 here]